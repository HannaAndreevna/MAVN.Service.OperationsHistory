// <auto-generated />
using System;
using Lykke.Service.OperationsHistory.MsSqlRepositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lykke.Service.OperationsHistory.MsSqlRepositories.Migrations
{
    [DbContext(typeof(OperationsHistoryContext))]
    [Migration("20190607095450_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("operation_history")
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lykke.Service.OperationsHistory.MsSqlRepositories.Entities.BonusCashInEntity", b =>
                {
                    b.Property<string>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("transaction_id");

                    b.Property<long>("Amount")
                        .HasColumnName("amount");

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset");

                    b.Property<string>("BonusType")
                        .IsRequired()
                        .HasColumnName("bonus_type");

                    b.Property<string>("CampaignId")
                        .HasColumnName("campaign_id");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("customer_id");

                    b.Property<string>("ExternalOperationId")
                        .HasColumnName("external_operation_id");

                    b.Property<string>("PartnerId")
                        .HasColumnName("partner_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("TransactionId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CustomerId");

                    b.ToTable("bonus_cash_in");
                });

            modelBuilder.Entity("Lykke.Service.OperationsHistory.MsSqlRepositories.Entities.CampaignEntity", b =>
                {
                    b.Property<string>("CampaignId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CampaignName")
                        .IsRequired();

                    b.HasKey("CampaignId");

                    b.ToTable("campaigns");
                });

            modelBuilder.Entity("Lykke.Service.OperationsHistory.MsSqlRepositories.Entities.TransactionHistoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnName("transaction_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Timestamp");

                    b.HasIndex("TransactionId");

                    b.ToTable("transaction_history");
                });

            modelBuilder.Entity("Lykke.Service.OperationsHistory.MsSqlRepositories.Entities.TransferEntity", b =>
                {
                    b.Property<string>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("transaction_id");

                    b.Property<long>("Amount")
                        .HasColumnName("amount");

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset");

                    b.Property<string>("ExternalOperationId")
                        .HasColumnName("external_operation_id");

                    b.Property<string>("ReceiverCustomerId")
                        .IsRequired()
                        .HasColumnName("receiver_id");

                    b.Property<string>("SenderCustomerId")
                        .IsRequired()
                        .HasColumnName("sender_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("TransactionId");

                    b.HasIndex("ReceiverCustomerId");

                    b.HasIndex("SenderCustomerId");

                    b.ToTable("transfer");
                });

            modelBuilder.Entity("Lykke.Service.OperationsHistory.MsSqlRepositories.Entities.BonusCashInEntity", b =>
                {
                    b.HasOne("Lykke.Service.OperationsHistory.MsSqlRepositories.Entities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId");
                });
#pragma warning restore 612, 618
        }
    }
}
